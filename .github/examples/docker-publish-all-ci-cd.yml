name: CI/CD via Makefile

# üìå CI pour PR & push sur main, CD pour tags
# ‚úÖ PR vers main       ‚Üí lint + format + test (no Docker)
# ‚úÖ Push sur main      ‚Üí build, test, push "latest"
# ‚úÖ Push d‚Äôun tag v*   ‚Üí build, test, push avec tag versionn√©

on:
  push:
    branches: [main]
    tags: ['v*']
  pull_request:
    branches: [main]

env:
  PORT: 8000

jobs:
  build-test-push:
    runs-on: ubuntu-latest

    steps:
    ##########################################################################
    # 1Ô∏è‚É£ SETUP
    ##########################################################################

    - name: üßæ Checkout code
      uses: actions/checkout@v3

    - name: üîß Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: üîç Ensure .python-version exists
      run: test -f .python-version

    - name: üêç Read Python version from file
      id: python_version
      run: echo "version=$(cat .python-version)" >> $GITHUB_OUTPUT

    - name: üêç Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ steps.python_version.outputs.version }}

    - name: üì¶ Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    ##########################################################################
    # 2Ô∏è‚É£ ALWAYS: Code Quality & Testing
    ##########################################################################

    - name: ‚úÖ Run make check (format + lint + test)
      run: make check

    ##########################################################################
    # 3Ô∏è‚É£ ONLY ON PUSH (main or tag): Build & Push Docker
    ##########################################################################

    - name: üîê Log in to Docker Hub
      if: github.event_name == 'push'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: üß™ Build, Run, Test, and Stop Docker container
      if: github.event_name == 'push'
      run: make deploy PORT=${PORT}

    ##########################################################################
    # 4Ô∏è‚É£ ON TAG PUSH (e.g., v1.2.3): Push Docker image with version tag
    ##########################################################################

    - name: üöÄ Push Docker image with version tag
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        VERSION=${GITHUB_REF#refs/tags/}
        make push DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }} GIT_SHA=$VERSION

    ##########################################################################
    # 5Ô∏è‚É£ ON MAIN BRANCH PUSH: Push Docker image with "latest"
    ##########################################################################

    - name: üê≥ Push Docker image with "latest" tag
      if: github.ref == 'refs/heads/main'
      run: |
        make push DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }} GIT_SHA=latest
